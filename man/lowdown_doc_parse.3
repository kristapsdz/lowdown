.\"	$Id$
.\"
.\" Copyright (c) 2017 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 6 2017 $
.Dt LOWDOWN_DOC_PARSE 3
.Os
.Sh NAME
.Nm lowdown_doc_parse
.Nd parse a Markdown document into an AST
.Sh LIBRARY
.Lb liblowdown
.Sh SYNOPSIS
.In sys/queue.h
.In stdio.h
.In lowdown.h
.Ft "struct lowdown_node *"
.Fo lowdown_doc_parse
.Fa "hdoc *doc"
.Fa "const char *input"
.Fa "size_t inputsz"
.Fa "struct lowdown_meta **meta"
.Fa "size_t *metasz"
.Fc
.Sh DESCRIPTION
The
.Nm
function parses a Markdown document in the buffer
.Fa input
of length
.Fa inputsz
into an AST.
It also fills in the metadata
.Fa meta ,
if not
.Dv NULL ,
with an array of length
.Fa metasz .
This function may be invoked multiple times with a single
.Fa doc ,
which is reset upon each invocation.
.Pp
The AST is a tree of
.Va "struct lowdown_node"
nodes, the structure consisting of:
.Bd -literal
struct lowdown_node {
	enum lowdown_rndrt type;
	size_t id;
	enum lowdown_chng chng;
	union {
		struct rndr_doc_header {
			struct lowdown_meta *m;
			size_t msz;
		} rndr_doc_header;
		struct rndr_list {
			enum hlist_fl flags;
		} rndr_list;
		struct rndr_listitem {
			enum hlist_fl flags;
			size_t num;
		} rndr_listitem;
		struct rndr_header {
			size_t level;
		} rndr_header;
		struct rndr_normal_text {
			hbuf text;
		} rndr_normal_text;
		struct rndr_entity {
			hbuf text;
		} rndr_entity;
		struct rndr_autolink {
			hbuf link;
			hbuf text;
			enum halink_type type;
		} rndr_autolink;
		struct rndr_raw_html {
			hbuf text;
		} rndr_raw_html;
		struct rndr_link {
			hbuf link;
			hbuf title;
		} rndr_link;
		struct rndr_blockcode {
			hbuf text;
			hbuf lang;
		} rndr_blockcode;
		struct rndr_codespan {
			hbuf text;
		} rndr_codespan;
		struct rndr_table_header {
			enum htbl_flags *flags;
			size_t columns;
		} rndr_table_header;
		struct rndr_table_cell {
			enum htbl_flags flags;
			size_t col;
			size_t columns;
		} rndr_table_cell;
		struct rndr_footnote_def {
			size_t num;
		} rndr_footnote_def;
		struct rndr_footnote_ref {
			size_t num;
		} rndr_footnote_ref;
		struct rndr_image {
			hbuf link;
			hbuf title;
			hbuf dims;
			hbuf alt;
		} rndr_image;
		struct rndr_math {
			int displaymode;
		} rndr_math;
		struct rndr_blockhtml {
			hbuf text;
		} rndr_blockhtml;
	};
	struct lowdown_node *parent;
	struct lowdown_nodeq children;
	TAILQ_ENTRY(lowdown_node) entries;
};
.Ed
.Pp
The field names consist of the following:
.Bl -tag -width Ds
.It Vt "enum lowdown_rndrt" Va type
The node type.
.Pq Described below.
.It Vt size_t Va id
An identifier unique within the document.
This can be used as a table index since the number is assigned from a
monotonically increasing point during the parse.
.It Vt "struct lowdown_node *" Ns Va parent
The parent of the node, or
.Dv NULL
at the root.
.It Vt "enum lowdown_chng" Va chng
Change tracking: whether this node was inserted
.Pq Dv LOWDOWN_CHNG_INSERT ,
deleted
.Pq Dv LOWDOWN_CHNG_DELETE ,
or neither
.Pq Dv LOWDOWN_CHNG_NONE .
.It Vt "struct lowdown_nodeq" Va children
A possibly-empty list of child nodes.
.It Va entries
The tail queue
.Xr queue 3
.Dv FIELDNAME .
.It Va <anon union>
An anonymous union of type-specific structures.
See below for a description of each one.
.El
.Pp
The nodes may be one of the following types, with default rendering in
HTML5 to illustrate functionality.
.Bl -tag -width Ds
.It Dv LOWDOWN_ROOT
The root of the document.
This is always the topmost node, and the only node where the
.Va parent
field is
.Dv NULL .
.It Dv LOWDOWN_BLOCKCODE
A block-level (and possibly language-specific) snippet of code.
Described by the
.Li <pre><code>
elements.
.It Dv LOWDOWN_BLOCKHTML
A block-level snippet of HTML.
This is simply opaque HTML content.
(Only if configured during parse.)
.It Dv LOWDOWN_BLOCKQUOTE
A block-level quotation.
Described by the
.Li <blockquote>
element.
.It Dv LOWDOWN_CODESPAN
A snippet of code.
Described by the
.Li <code>
element.
.It Dv LOWDOWN_DOC_FOOTER
Closes out the documented opened in
.Dv LOWDOWN_DOC_HEADER.
(Only if configured during parse.)
.It Dv LOWDOWN_DOC_HEADER
A header with data gathered from document metadata (if configured).
Described by elements up to the
.Li <body> .
(Only if configured during parse.)
.It Dv LOWDOWN_DOUBLE_EMPHASIS
Bold (or otherwise notable) content.
Described by the
.Li <strong>
element.
.It Dv LOWDOWN_EMPHASIS
Italic (or otherwise notable) content.
Described by the
.Li <em>
element.
.It Dv LOWDOWN_ENTITY
An HTML entity, which may either be named or numeric.
.It Dv LOWDOWN_FOOTNOTE_DEF
A footnote within a
.Dv LOWDOWN_FOOTNOTES_BLOCK
node.
Described by the
.Li <li id="fnXX">
element.
(Only if configured during parse.)
.It Dv LOWDOWN_FOOTNOTE_REF
A reference to a
.Dv LOWDOWN_FOOTNOTE_DEF .
Described by the
.Li <sup><a>
elements.
(Only if configured during parse.)
.It Dv LOWDOWN_FOOTNOTES_BLOCK
A block of footnotes.
Described by the
.Li <div class="footnotes"><hr /><ol>
elements.
(Only if configured during parse.)
.It Dv LOWDOWN_HEADER
A block-level header.
Described by one of
.Li <h1>
through
.Li <h6> .
.Pq The level is bound at 6.
.It Dv LOWDOWN_HIGHLIGHT
Marked test.
Described by the
.Li <mark>
element.
(Only if configured during parse.)
.It Dv LOWDOWN_HRULE
A horizontal line.
Described by
.Li <hr> .
.It Dv LOWDOWN_IMAGE
An image.
Described by the
.Li <img>
element.
.It Dv LOWDOWN_LINEBREAK
A hard line-break within a block context.
Described by the
.Li <br>
element.
.It Dv LOWDOWN_LINK
A link to external media.
Described by the
.Li <a>
element.
.It Dv LOWDOWN_LINK_AUTO
Like
.Dv LOWDOWN_LINK ,
except inferred from text content.
Described by the
.Li <a>
element.
(Only if configured during parse.)
.It Dv LOWDOWN_LIST
A block-level list enclosure.
Described by
.Li <ul>
or
.Li <ol> .
.It Dv LOWDOWN_LISTITEM
A block-level list item, always appearing within a
.Dv LOWDOWN_LIST .
Described by
.Li <li> .
.It Dv LOWDOWN_MATH_BLOCK
A block (or inline) of mathematical text in LaTeX format.
Described within
.Li \e[xx\e]
or
.Li \e(xx\e) .
This is usually (in HTML) externally handled by a JavaScript renderer.
(Only if configured during parse.)
.It Dv LOWDOWN_NORMAL_TEXT
Normal text content.
.It Dv LOWDOWN_PARAGRAPH
A block-level paragraph.
Described by the
.Li <p>
element.
.It Dv LOWDOWN_RAW_HTML
An inline of raw HTML.
(Only if configured during parse.)
.It Dv LOWDOWN_STRIKETHROUGH
Content struck through.
Described by the
.Li <del>
element.
(Only if configured during parse.)
.It Dv LOWDOWN_SUPERSCRIPT
A superscript.
Described by the
.Li <sup>
element.
(Only if configured during parse.)
.It Dv LOWDOWN_TABLE_BLOCK
A table block.
Described by
.Li <table> .
(Only if configured during parse.)
.It Dv LOWDOWN_TABLE_BODY
A table body section.
Described by
.Li <tbody> .
Parent is always
.Dv LOWDOWN_TABLE_BLOCK .
(Only if configured during parse.)
.It Dv LOWDOWN_TABLE_CELL
A table cell.
Described by
.Li <td>
or
.Li <th>
if in the header.
Parent is always
.Dv LOWDOWN_TABLE_ROW .
(Only if configured during parse.)
.It Dv LOWDOWN_TABLE_HEADER
A table header section.
Described by
.Li <thead> .
Parent is always
.Dv LOWDOWN_TABLE_BLOCK .
(Only if configured during parse.)
.It Dv LOWDOWN_TABLE_ROW
A table row.
Described by
.Li <tr> .
Parent is always
.Dv LOWDOWN_TABLE_HEADER
or
.Dv LOWDOWN_TABLE_BODY .
(Only if configured during parse.)
.It Dv LOWDOWN_TRIPLE_EMPHASIS
Combination of
.Dv LOWDOWN_EMPHASIS
and
.Dv LOWDOWN_DOUBLE_EMPHASIS .
.El
.Pp
The following anonymous union structures correspond to certain nodes.
Note that all buffers may be zero-length.
.Bl -tag -width Ds
.It Va rndr_doc_header
Valid for
.Dv LOWDOWN_DOC_HEADER
nodes.
Consists of
.Vt m ,
an array of raw metadata values of size
.Vt msz .
.It Va rndr_list
For
.Dv LOWDOWN_DOC_LIST ,
consists of a bitfield
.Va flags
that may be set to
.Dv HLIST_FL_ORDERED
.Pq an ordered list
and/or
.Dv HLIST_FL_BLOCK
.Pq list elements contain block elements .
.It Va rndr_listitem
For
.Dv LOWDOWN_DOC_LISTITEM ,
having the same
.Va flags
of the
.Dv LOWDOWN_DOC_LIST as well as
.Va num ,
the index in an ordered list.
.It Va rndr_header
For
.Dv LOWDOWN_HEADER ,
the
.Va level
of the header (1\(en6).
.It Va rndr_normal_text
The basic
.Va text
content for
.Dv LOWDOWN_NORMAL_TEXT .
.It Va rndr_entity
For
.Dv LOWDOWN_ENTITY ,
the entity
.Va text .
.It Va rndr_autolink
For
.Dv LOWDOWN_LINK_AUTO ,
the link address as
.Va link ;
the textual component
.Va text ;
and the link type
.Va type ,
which may be one of
.Dv HALINK_EMAIL
for e-mail links and
.Dv HALINK_NORMAL
otherwise.
Any buffer may be empty-sized.
.It Va rndr_raw_html
For
.Dv LOWDOWN_RAW_HTML ,
the opaque HTML
.Va text .
.It Va rndr_link
Like
.Va rndr_autolink .
.It Va rndr_blockcode
For
.Dv LOWDOWN_BLOCKCODE ,
the opaque
.Va text
of the block and the optional
.Va lang
of the code language.
.It Va rndr_codespan
The opaque
.Va text
of the contents.
.It Va rndr_table_header
For
.Dv LOWDOWN_TABLE_HEADER ,
the number of
.Va columns
in each row and the per-column
.Va flags ,
which may be bits of
.Dv HTBL_FL_ALIGN_LEFT ,
.Dv HTBL_FL_ALIGN_RIGHT ,
or
.Dv HTBL_FL_ALIGN_CENTER
when masked with
.Dv HTBL_FL_ALIGNMASK ;
or
.Dv HTBL_FL_HEADER .
.It Va rndr_table_cell
For
.Dv LOWDOWN_TABLE_CELL ,
the current
.Va col
colum number out of
.Va columns .
See
.Va rndr_table_header
for a description of the bits in
.Va flags .
.It Va rndr_footnote_def
For
.Dv LOWDOWN_FOOTNOTE_DEF ,
the footnote number
.Va  num .
.It Va rndr_footnote_ref
For a
.Dv LOWDOWN_FOOTNOTE_REF
reference to a
.Dv LOWDOWN_FOOTNOTE_DEF ,
the footnote number
.Va num .
.It Va rndr_image
For
.Dv LOWDOWN_IMAGE ,
the image address
.Va link ,
the image title
.Va title ,
dimensions NxN (width by height) in
.Va dims ,
and alternate text
.Va alt .
.It Va rndr_math
For
.Dv LOWDOWN_MATH ,
the mode of display
.Va displaymode :
if 1, in-line math; if 2, multi-line.
.It Va rndr_blockhtml
For
.Dv LOWDOWN_BLOCKHTML ,
the opaque HTML
.Va text .
.El
.Sh RETURN VALUES
Returns the root of the parse tree.
The pointer is never
.Dv NULL .
.Sh SEE ALSO
.Xr lowdown 3
